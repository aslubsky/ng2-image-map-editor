import { Help } from './help.class';
import { Buttons } from './buttons.class';
export declare class CursorPositionInfo {
    private _coords_info;
    set(coords: any): void;
    empty(): void;
}
export declare class EditorApp {
    domElements: any;
    img: any;
    state: any;
    static KEYS: any;
    cursor_position_info: CursorPositionInfo;
    help: Help;
    buttons: Buttons;
    filename: any;
    constructor();
    recalcOffsetValues(): void;
    onSvgMousedown(e: any): void;
    onSvgClick(e: any): void;
    onAreaDblClick(e: any): void;
    onDocumentKeyDown(e: any): void;
    hide(): this;
    show(): this;
    setDimensions(width: any, height: any): this;
    onImageLoaded(): void;
    loadImage(url: any, width: any): this;
    preview(): void;
    hidePreview(): this;
    addNodeToSvg(node: any): this;
    removeNodeFromSvg(node: any): this;
    getOffset(arg: any): any;
    clear(): this;
    removeObject(obj: any): this;
    deselectAll(): this;
    getIsDraw(): any;
    setIsDraw(arg: any): this;
    setMode(arg: any): this;
    getMode(): any;
    onSetMode(mode: any): void;
    onCurrentType(type: any): void;
    setShape(arg: any): this;
    getShape(): any;
    addObject(object: any): this;
    getNewArea(): any;
    resetNewArea(): this;
    getSelectedArea(): any;
    setSelectedArea(obj: any): this;
    getEditType(): any;
    setFilename(str: any): this;
    setEditClass(): this;
    setDrawClass(): this;
    setDefaultClass(): this;
    addEvent(target: any, eventType: any, func: any): this;
    removeAllEvents(): this;
    loadJSON(str: any, width: any): void;
    getAreas(): any;
    getAreasJSON(scale: any): string;
    getHTMLCode(arg: any): string;
}
