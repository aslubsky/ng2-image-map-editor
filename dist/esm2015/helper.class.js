import { Area } from './area.class';
/**
 * The constructor of helpers points
 *
 * @constructor
 * @param node {parentNode} - a node for inserting helper
 * @param x {number} - x - coordinate
 * @param y {number} - y - coordinate
 * @param action {string} - an action by click of this helper
 */
export class Helper {
    constructor(node, x, y, action) {
        if (action == 'number') {
            this._el = document.createElementNS(Area.SVG_NS, 'text');
        }
        else {
            this._el = document.createElementNS(Area.SVG_NS, 'rect');
        }
        this._el.classList.add(Helper.CLASS_NAME);
        if (action == 'number') {
            //this._el.textContent = 'Test';
            this._el.setAttribute('height', Helper.SIZENum);
            this._el.setAttribute('width', Helper.SIZENum);
            this._el.setAttribute('x', x + Helper.OFFSET);
            this._el.setAttribute('y', y + Helper.OFFSET);
        }
        else {
            this._el.setAttribute('height', Helper.SIZE);
            this._el.setAttribute('width', Helper.SIZE);
            this._el.setAttribute('x', x + Helper.OFFSET);
            this._el.setAttribute('y', y + Helper.OFFSET);
        }
        node.appendChild(this._el);
        this._el.action = action;
        this._el.classList.add(Helper.ACTIONS_TO_CURSORS[action]);
    }
    setCoords(x, y) {
        this._el.setAttribute('x', x + Helper.OFFSET);
        this._el.setAttribute('y', y + Helper.OFFSET);
        return this;
    }
    setNumber(id) {
        this._el.textContent = id + 1;
    }
    setId(id) {
        this._el.n = id;
        return this;
    }
}
Helper.SIZE = 5;
Helper.SIZENum = 15;
Helper.OFFSET = -Math.ceil(Helper.SIZE / 2);
Helper.CLASS_NAME = 'helper';
Helper.ACTIONS_TO_CURSORS = {
    'move': 'move',
    'editLeft': 'e-resize',
    'editRight': 'w-resize',
    'editTop': 'n-resize',
    'editBottom': 's-resize',
    'editTopLeft': 'nw-resize',
    'editTopRight': 'ne-resize',
    'editBottomLeft': 'sw-resize',
    'editBottomRight': 'se-resize',
    'pointMove': 'pointer',
    'number': 'default'
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hlbHBlci5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRWxDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxPQUFPLE1BQU07SUFxQmYsWUFBWSxJQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxNQUFjO1FBQ3ZELElBQUksTUFBTSxJQUFJLFFBQVEsRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztTQUM1RDthQUFNO1lBQ0gsSUFBSSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDNUQ7UUFHRCxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzFDLElBQUksTUFBTSxJQUFJLFFBQVEsRUFBRTtZQUNwQixnQ0FBZ0M7WUFDaEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNoRCxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2pEO2FBQU07WUFDSCxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDNUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDakQ7UUFFRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUzQixJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFTSxTQUFTLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDakMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFOUMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxFQUFVO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLEtBQUssQ0FBQyxFQUFVO1FBQ25CLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOztBQTlEYSxXQUFJLEdBQVcsQ0FBQyxDQUFDO0FBQ2pCLGNBQU8sR0FBVyxFQUFFLENBQUM7QUFDckIsYUFBTSxHQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQzdDLGlCQUFVLEdBQVcsUUFBUSxDQUFDO0FBQzlCLHlCQUFrQixHQUFRO0lBQ3BDLE1BQU0sRUFBRSxNQUFNO0lBQ2QsVUFBVSxFQUFFLFVBQVU7SUFDdEIsV0FBVyxFQUFFLFVBQVU7SUFDdkIsU0FBUyxFQUFFLFVBQVU7SUFDckIsWUFBWSxFQUFFLFVBQVU7SUFDeEIsYUFBYSxFQUFFLFdBQVc7SUFDMUIsY0FBYyxFQUFFLFdBQVc7SUFDM0IsZ0JBQWdCLEVBQUUsV0FBVztJQUM3QixpQkFBaUIsRUFBRSxXQUFXO0lBQzlCLFdBQVcsRUFBRSxTQUFTO0lBQ3RCLFFBQVEsRUFBRSxTQUFTO0NBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FyZWF9IGZyb20gJy4vYXJlYS5jbGFzcyc7XG5cbi8qKlxuICogVGhlIGNvbnN0cnVjdG9yIG9mIGhlbHBlcnMgcG9pbnRzXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0gbm9kZSB7cGFyZW50Tm9kZX0gLSBhIG5vZGUgZm9yIGluc2VydGluZyBoZWxwZXJcbiAqIEBwYXJhbSB4IHtudW1iZXJ9IC0geCAtIGNvb3JkaW5hdGVcbiAqIEBwYXJhbSB5IHtudW1iZXJ9IC0geSAtIGNvb3JkaW5hdGVcbiAqIEBwYXJhbSBhY3Rpb24ge3N0cmluZ30gLSBhbiBhY3Rpb24gYnkgY2xpY2sgb2YgdGhpcyBoZWxwZXJcbiAqL1xuZXhwb3J0IGNsYXNzIEhlbHBlciB7XG4gICAgcHVibGljIHN0YXRpYyBTSVpFOiBudW1iZXIgPSA1O1xuICAgIHB1YmxpYyBzdGF0aWMgU0laRU51bTogbnVtYmVyID0gMTU7XG4gICAgcHVibGljIHN0YXRpYyBPRkZTRVQ6IG51bWJlciA9IC1NYXRoLmNlaWwoSGVscGVyLlNJWkUgLyAyKTtcbiAgICBwdWJsaWMgc3RhdGljIENMQVNTX05BTUU6IHN0cmluZyA9ICdoZWxwZXInO1xuICAgIHB1YmxpYyBzdGF0aWMgQUNUSU9OU19UT19DVVJTT1JTOiBhbnkgPSB7XG4gICAgICAgICdtb3ZlJzogJ21vdmUnLFxuICAgICAgICAnZWRpdExlZnQnOiAnZS1yZXNpemUnLFxuICAgICAgICAnZWRpdFJpZ2h0JzogJ3ctcmVzaXplJyxcbiAgICAgICAgJ2VkaXRUb3AnOiAnbi1yZXNpemUnLFxuICAgICAgICAnZWRpdEJvdHRvbSc6ICdzLXJlc2l6ZScsXG4gICAgICAgICdlZGl0VG9wTGVmdCc6ICdudy1yZXNpemUnLFxuICAgICAgICAnZWRpdFRvcFJpZ2h0JzogJ25lLXJlc2l6ZScsXG4gICAgICAgICdlZGl0Qm90dG9tTGVmdCc6ICdzdy1yZXNpemUnLFxuICAgICAgICAnZWRpdEJvdHRvbVJpZ2h0JzogJ3NlLXJlc2l6ZScsXG4gICAgICAgICdwb2ludE1vdmUnOiAncG9pbnRlcicsXG4gICAgICAgICdudW1iZXInOiAnZGVmYXVsdCdcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBfZWw6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKG5vZGU6IGFueSwgeDogbnVtYmVyLCB5OiBudW1iZXIsIGFjdGlvbjogc3RyaW5nKSB7XG4gICAgICAgIGlmIChhY3Rpb24gPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMuX2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKEFyZWEuU1ZHX05TLCAndGV4dCcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoQXJlYS5TVkdfTlMsICdyZWN0Jyk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIHRoaXMuX2VsLmNsYXNzTGlzdC5hZGQoSGVscGVyLkNMQVNTX05BTUUpO1xuICAgICAgICBpZiAoYWN0aW9uID09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAvL3RoaXMuX2VsLnRleHRDb250ZW50ID0gJ1Rlc3QnO1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCBIZWxwZXIuU0laRU51bSk7XG4gICAgICAgICAgICB0aGlzLl9lbC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgSGVscGVyLlNJWkVOdW0pO1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCd4JywgeCArIEhlbHBlci5PRkZTRVQpO1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCd5JywgeSArIEhlbHBlci5PRkZTRVQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCBIZWxwZXIuU0laRSk7XG4gICAgICAgICAgICB0aGlzLl9lbC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgSGVscGVyLlNJWkUpO1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCd4JywgeCArIEhlbHBlci5PRkZTRVQpO1xuICAgICAgICAgICAgdGhpcy5fZWwuc2V0QXR0cmlidXRlKCd5JywgeSArIEhlbHBlci5PRkZTRVQpO1xuICAgICAgICB9XG5cbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0aGlzLl9lbCk7XG5cbiAgICAgICAgdGhpcy5fZWwuYWN0aW9uID0gYWN0aW9uO1xuICAgICAgICB0aGlzLl9lbC5jbGFzc0xpc3QuYWRkKEhlbHBlci5BQ1RJT05TX1RPX0NVUlNPUlNbYWN0aW9uXSk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldENvb3Jkcyh4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLl9lbC5zZXRBdHRyaWJ1dGUoJ3gnLCB4ICsgSGVscGVyLk9GRlNFVCk7XG4gICAgICAgIHRoaXMuX2VsLnNldEF0dHJpYnV0ZSgneScsIHkgKyBIZWxwZXIuT0ZGU0VUKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0TnVtYmVyKGlkOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5fZWwudGV4dENvbnRlbnQgPSBpZCArIDE7XG4gICAgfVxuXG4gICAgcHVibGljIHNldElkKGlkOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5fZWwubiA9IGlkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59Il19